{"version":3,"sources":["containers/Login/Login.tsx","components/Inputs/InputTypes.ts","components/Inputs/TextInput.tsx"],"names":["_App","props","submitLogin","e","preventDefault","state","username","length","setState","error","target","msg","password","loading","FC_Login","auth_status","console","log","FC_AddBasicInfo","status","setTimeout","this","auth","isAuthenticated","to","theme","fixed","className","onSubmit","label","name","onChange","value","placeholder","disabled","type","full","React","Component","Login","connect","InputSize","key","TextInput","Input_className","Label_className","InputContainer_className","MainContainer_className","size","max","readOnly","useState","showPass","setShowPass","htmlFor","maxLength","onClick","bind"],"mappings":"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","file":"static/js/6.b3ac995b.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport {\n  Auth,\n  FC_AddBasicInfo,\n  FC_Login,\n  FT_AddBasicInfo,\n  FT_Login,\n} from \"../../actions\";\nimport Alert from \"../../components/Alert/Alert\";\nimport Button from \"../../components/Buttons/Button\";\nimport TextInput from \"../../components/Inputs/TextInput\";\nimport { StoreState } from \"../../reducers\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  FC_Login: FT_Login;\n  FC_AddBasicInfo: FT_AddBasicInfo;\n}\n\ninterface AppState {\n  username: string;\n  password: string;\n  loading: boolean;\n  error: {\n    target: \"username\" | \"password\" | \"main\" | null;\n    msg: string;\n  };\n}\n\nclass _App extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n    };\n  }\n\n  submitLogin = (e: any) => {\n    e.preventDefault();\n\n    //* Validation\n    if (this.state.username.length <= 4) {\n      return this.setState({\n        error: {\n          target: \"username\",\n          msg: \"Phone must not be lass than 4 character\",\n        },\n      });\n    }\n\n    //* Validation\n    if (this.state.password.length <= 4) {\n      return this.setState({\n        error: {\n          target: \"password\",\n          msg: \"Password must not be lass than 4 character\",\n        },\n      });\n    }\n\n    this.setState({\n      loading: true,\n      error: {\n        target: null,\n        msg: \"\",\n      },\n    });\n    this.props.FC_Login(\n      {\n        password: this.state.password,\n        username: this.state.username,\n      },\n      (auth_status, msg) => {\n        console.log({ auth_status, msg });\n\n        if (auth_status === true) {\n          // setTimeout(() => {\n          this.props.FC_AddBasicInfo((status, error) => {\n            if (status === false) {\n              this.setState({\n                error: {\n                  target: \"main\",\n                  msg: msg,\n                },\n              });\n            }\n          });\n          // }, 100);\n        } else {\n          this.setState({\n            error: {\n              target: \"main\",\n              msg: msg,\n            },\n            loading: false,\n          });\n\n          setTimeout(() => {\n            this.setState({\n              error: {\n                target: null,\n                msg: \"\",\n              },\n            });\n          }, 3000);\n        }\n      }\n    );\n  };\n\n  render() {\n    if (this.props.auth.isAuthenticated === true) {\n      return <Redirect to=\"/dashboard\" />;\n    }\n    return (\n      <>\n        {this.state.error.target === \"main\" && (\n          <Alert theme=\"danger\" fixed>\n            {this.state.error.msg}\n          </Alert>\n        )}\n\n        <div className=\"min-h-screen bg-blue-200 dark:bg-dark-900 flex items-center\">\n          <div className=\"bg-white py-10 animate__animated animate__zoomIn animate__faster rounded border mt-5  dark:bg-dark-800 w-full max-w-md mx-auto px-5\">\n            <form onSubmit={this.submitLogin}>\n              <h1 className=\"text-center text-3xl mb-6 text-primary-800 dark:text-primary-dark  font-extrabold\">\n                Connexion\n              </h1>\n\n              <TextInput\n                error={\n                  this.state.error.target === \"username\"\n                    ? this.state.error.msg\n                    : \"\"\n                }\n                label=\"Email\"\n                name=\"phone\"\n                onChange={(e) =>\n                  this.setState({\n                    username: e.target.value,\n                    error: {\n                      target: null,\n                      msg: \"\",\n                    },\n                  })\n                }\n                placeholder=\"email@gmail.fr\"\n                value={this.state.username}\n                disabled={this.state.loading}\n                type=\"email\"\n              />\n\n              <TextInput\n                error={\n                  this.state.error.target === \"password\"\n                    ? this.state.error.msg\n                    : \"\"\n                }\n                label=\"Le mot de passe\"\n                name=\"password\"\n                onChange={(e) =>\n                  this.setState({\n                    password: e.target.value,\n                    error: {\n                      target: null,\n                      msg: \"\",\n                    },\n                  })\n                }\n                placeholder=\"Password\"\n                value={this.state.password}\n                disabled={this.state.loading}\n                type=\"password\"\n              />\n\n              <div className=\"mt-5\">\n                <Button full loading={this.state.loading}>\n                  Se connecter au système\n                </Button>\n              </div>\n\n              <div className=\"mt-4 text-center\">\n                <p className=\" cursor-pointer\">Mot de passe oublié?</p>\n              </div>\n            </form>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const Login = connect(mapStateToProps, {\n  FC_Login,\n  FC_AddBasicInfo,\n})(_App);\n","export type InputSizeType = \"lg\" | \"sm\" | \"md\";\n\nexport const InputSize = (key: InputSizeType): string => {\n  switch (key) {\n    case \"sm\":\n      return \"p-1 text-sm\";\n    case \"md\":\n      return \"p-2 px-4 text-md\";\n    case \"lg\":\n      return \"p-3 px-5 text-lg\";\n    default:\n      return \"\";\n  }\n};\n","import React, { ChangeEvent, useState, FC, ReactElement } from \"react\";\nimport { IoMdEye, IoMdEyeOff } from \"react-icons/io\";\nimport { InputSize, InputSizeType } from \"./InputTypes\";\n\ntype TextInputProps = {\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  value: string | number;\n  error: string;\n  label: string;\n  placeholder: string;\n  type?: \"email\" | \"password\" | \"date\" | \"text\" | \"number\" | \"search\";\n  disabled?: boolean;\n  name: string;\n  className?: string;\n  size?: InputSizeType;\n  Input_className?: string;\n  Label_className?: string;\n  InputContainer_className?: string;\n  MainContainer_className?: string;\n  max?: number;\n  readOnly?: boolean;\n};\n\nconst TextInput: FC<TextInputProps> = ({\n  onChange,\n  value,\n  error,\n  label,\n  placeholder,\n  type = \"text\",\n  disabled = false,\n  name,\n  Input_className = \"\",\n  Label_className = \"\",\n  InputContainer_className = \"\",\n  MainContainer_className = \"\",\n  size = \"md\",\n  max,\n  readOnly = false,\n}): ReactElement => {\n  const [showPass, setShowPass] = useState(false);\n\n  /* function body */\n  return (\n    <>\n      <div className={`w-full  ${MainContainer_className}`}>\n        {label !== \"\" && (\n          <label\n            htmlFor=\"login-form-email\"\n            className={`text-primary-900 dark:text-primary-100 ${Label_className}`}\n          >\n            {label}\n          </label>\n        )}\n        <div className={`rounded relative ${InputContainer_className}`}>\n          <input\n            type={showPass ? \"text\" : type}\n            name={name}\n            placeholder={placeholder}\n            onChange={onChange}\n            className={`\n                w-full text-lg rounded border-2 \n                ${InputSize(size)}\n                ${\n                  error !== \"\"\n                    ? \"border-red-500 dark:text-white bg-red-100 dark:bg-red-900 dark:bg-opacity-30\"\n                    : \"border-primary-800 dark:text-white bg-white dark:bg-primary-900 \"\n                }\n                px-3 ${Input_className}`}\n            value={value}\n            disabled={disabled}\n            maxLength={max}\n            readOnly={readOnly}\n          />\n\n          {type === \"password\" && (\n            <button\n              className=\"absolute -ml-11 p-1 mt-0.5 text-blue-700\"\n              type=\"button\"\n              onClick={setShowPass.bind(this, !showPass)}\n            >\n              {showPass ? (\n                <IoMdEye className=\"text-4xl\" />\n              ) : (\n                <IoMdEyeOff className=\"text-4xl\" />\n              )}\n            </button>\n          )}\n\n          {error !== \"\" && (\n            <p className=\"text-sm text-red-600 dark:text-red-500\">{error}</p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default TextInput;\n"],"sourceRoot":""}